{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/.../generic": {
            "get": {
                "description": "Gets a generic content by usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shared"
                ],
                "summary": "Generic endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sharedentities.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "binding error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/customers/": {
            "get": {
                "description": "Gets all customers with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Gets all customers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Customer"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new customer with the given data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Creates a new customer",
                "parameters": [
                    {
                        "description": "Customer Request Model",
                        "name": "customerReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.CustomerRequestModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/customers/:customerid": {
            "get": {
                "description": "Gets a single customer with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Gets a single customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Customer"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing customer with the given data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Updates an existing customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer Request Model",
                        "name": "customerReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.CustomerRequestModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing customer with the given ID\nChecks the order service whether if the user has non-delivered orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Deletes an existing customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customers/address/:customerid": {
            "get": {
                "description": "Gets the address of a customer with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Gets the address of a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sharedentities.Address"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "It gets all order list due to limit offset values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "It serves all orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Order"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/orders/:customerid": {
            "post": {
                "description": "It creates an order that comes with req. Body as JSON.\nhas validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "It creates an order",
                "parameters": [
                    {
                        "description": "Order fields",
                        "name": "entities.OrderRequestModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.OrderRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "binding error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/orders/:orderid": {
            "get": {
                "description": "It gets an order due to its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "It serves \"an\" order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Order"
                        }
                    }
                }
            },
            "put": {
                "description": "It updates an order that comes with req. Body as JSON.\nhas validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "It updates an order",
                "parameters": [
                    {
                        "description": "order fields",
                        "name": "entities.OrderRequestModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.OrderRequestModel"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Order UUID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "binding error",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "delete": {
                "description": "It deletes an order due to its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "It deletes \"an\" order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1 order has been deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Given ID param does not match any order.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/orders/orderof/:customerid": {
            "get": {
                "description": "Gets the orders of a customer with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Gets the orders of a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sharedentities.Address"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/sharedentities.Address"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.CustomerRequestModel": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/sharedentities.Address"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "entities.Order": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/sharedentities.Address"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "order_item": {
                    "$ref": "#/definitions/entities.Product"
                },
                "order_total": {
                    "type": "integer"
                },
                "payment_status": {
                    "type": "string"
                },
                "shipment_status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.OrderRequestModel": {
            "type": "object",
            "properties": {
                "order_item": {
                    "$ref": "#/definitions/entities.Product"
                },
                "order_total": {
                    "type": "integer"
                },
                "payment_status": {
                    "type": "string"
                },
                "shipment_status": {
                    "type": "string"
                }
            }
        },
        "entities.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "imageurl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "sharedentities.Address": {
            "description": "a nested struct for a field of entities.Customer and entities.Order",
            "type": "object",
            "properties": {
                "address_line": {
                    "type": "string"
                },
                "address_name": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "city_code": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                }
            }
        },
        "sharedentities.ResponseModel": {
            "description": "a struct for response with total object count and response object count fields",
            "type": "object",
            "properties": {
                "data": {},
                "resp_object_count": {
                    "type": "integer"
                },
                "total_object_count": {
                    "type": "integer"
                }
            }
        }
    }
}